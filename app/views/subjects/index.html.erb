<div class='hero-masonry span12'>

  <% @subjects.each do |subject| %>
    <%= link_to(subject_path(subject.slug)) do %>
      <div class="hero-item subject">
        <%= image_tag "subjects/#{subject.slug.underscore}.png" %>
        <h3><%= subject.name %></h3>
      </div>
    <% end %>
  <% end %>

</div>

<section id="why-i-made-codequizzes" class="span12 landing-section">
  <h2>Why CodeQuizzes?</h2>
  <p>Learning programming is hard... retaining what you learn is even harder!  When you learn a new concept, you need to practice it several times or you'll immediately forget it.</p>
  <p>What is the point of reading a book or taking a class if you're going to forget everything anyways?</p>
</section>

<section id="teaching-philosophy" class="span12 landing-section">
  <h2>Teaching Philosophy</h2>
  <ul>
    <li><strong>The quizzes teach the most important concepts first.</strong>  We're not going to burden you with a huge quiz that addresses all the edge cases if you're not ready yet!</li>
    <li><strong>Each question is stand-alone and not dependent on other questions.</strong>  We hate when questions are "chained" and one question cannot be anwered unless a prior question is answered correctly.</li>
    <li><strong>Each question teaches a single concept.</strong>  We hate when books teach two concepts at the same time - we only teach one concept per question.</li>
    <li><strong>Quizzes are short!</strong>  There is nothing worse than reading a chapter in a book, trying the chapter exercises, and realizing they will take you 8 hours to complete.  Every quiz on this site should only take 5 minutes to complete.</li>
    <li><strong>Repetition, repetition, repetition.</strong>  The quizzes are meant to be taken multiple times.  You need to beat programming concepts in your head to make them stick.</li>
    <li><strong>Bottom up.</strong>  We start with the basics and work up to more complicated topics.  Throwing learners into the deep end leads to frusteration and hoplessness.  Learing programming isn't that hard if you take it one step at a time.</li>
    <li><strong>Self sufficient developers.</strong>  We want to make you a self-sufficient developer that can solve any problem.  Too many courses and bootcamps are prematurely training developers complicated frameworks, so they can get a job quickly.  We believe in a long term, sequential learning approach.</li>
  </ul>
</section>

<section id="consulting" class="span12 landing-section">

  <h2>Consulting</h2>
  <p>Everyone on the CodeQuizzes team has successfully transitioned from unrelated fields to careers in technology.  We know what it takes to gain admission to bootcamps, pass coding interviews, succeed in technology, and work remotely as digital nomads.</p>

  <h3>Changing Carrers</h3>
  <p>Transitioning to a career in technology can be overwhelming.  There are so many different programming languages, frameworks, and platforms - it's hard to know where to start.  We can help you create an optimized study plan to help you reach your goals.</p>
  <p>If you'd like to become a data scientist, it's probably best to study Python and R.  If you'd like to be a web developer, you should look into Rails or Node.</p>

  <h3>Bootcamp Preparation</h3>
  <p>The admission process for some bootcamps is highly competitive - Hack Reactor boats an admissions rate of 3% and App Academy's admissions rate is less than 5%.</p>
  <p>You might need a mentor to guide your study routine and help you prepare an application for the elite programs.</p>

</section>

