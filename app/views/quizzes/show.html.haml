- content_for :title do
  = @quiz.page_title

= render "layouts/full_navigation"

%h1.center= (@quiz.page_title || @topic.name)
- unless current_user
  %div.center
    =button_to('Sign Up to Track Your Progress', new_user_registration_path, :class => 'btn btn-primary btn-large', :method => :get)

%table.table.table-bordered
  %thead
    %td Question
    %td Click to View Answer
    - if can? :update, Answer
      %td Your Answer
    - if can? :update, Question
      %td
    - if can? :destroy, Question
      %td
  - @quiz.questions.sort_by {|question| question.created_at}.each do |question|
    %tr.question-row{:data => {"question-id" => question.id}}
      %td.question
        = markdownify(question.body)
      %td.answer.no-opacity
        = markdownify(question.answer)
      - if can? :update, Answer
        %td.user-answer.center
          %button.btn.btn-success.correct-answer Correct
          %button.btn.btn-danger.incorrect-answer Wrong
      - if can? :update, question
        %td= link_to "Edit", edit_quiz_question_path(:id => question.id, :quiz_id => @quiz.id)
      - if can? :destroy, question
        %td= link_to 'Destroy', [question.quiz, question], :confirm => 'Are you sure?', :method => :delete

%br

- if can? :create, Exam
  %div
    %button.btn.btn-large.btn-primary.grade-exam{"data-target" => "#examResults", "data-toggle" => "modal"} Grade this Exam

  #examResults.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "examResultsLabel", role: "dialog", tabindex: "-1"}
    .modal-dialog
      .modal-content
        .modal-header
          %button.close{"aria-hidden" => "true", "data-dismiss" => "modal", type: "button"} Ã—
          %h4#examResultsLabel.modal-title Exam Results
        .modal-body
          %h4
            Percent Correct:
            %span.percent-correct
          %h5
            Correct Answers:
            %span.correct-answers
          %h5
            Incorrect Answers:
            %span.incorrect-answers
          %h5
            Not Answered:
            %span.unanswered-questions
          =button_to('Back To All Quizzes', root_path, :class => 'btn btn-primary', :method => :get)
        .modal-footer
          %button.btn.btn-default{"data-dismiss" => "modal", type: "button"} Close

%br

- if can? :create, @quiz.questions.build
  = render "questions"

%br

- if can?(:create, Comment) && current_user.username
  = form_for [@quiz, @quiz.comments.build] do |f|
    .comment_form_box= f.text_area :body, :rows => "5"
    = f.submit "Create Comment", :class => 'btn btn-info'
- elsif can?(:create, Comment)
  %h3= link_to "Add a username to your account to comment", edit_user_registration_path
- else
  %h3= link_to "Create an account to comment", new_user_registration_path

- @quiz.comments.reverse.each do |comment|
  - if comment.user
    = comment.user.username
    %span.time_ago= " * #{time_ago_in_words(comment.created_at)} ago"
    %br
    %pre.comment_body= comment.body
    %br

- if @exam
  %div.exam-information{:data => {"exam-id" => @exam.id}}
